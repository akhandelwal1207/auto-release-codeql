name: "CodeQL-Fly solution-4"

on:
  workflow_dispatch:
    inputs:
      analysis_ref:
        description: 'Branch or tag to analyze'
        required: true
      commit_sha:
        description: 'Optional commit SHA'
        required: false
      # Add more inputs here if needed

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ matrix.language == 'swift' && 'macos-latest' || 'ubuntu-latest' }}
    env:
      GITHUB_REF: ${{ github.event.inputs.analysis_ref }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.analysis_ref }}
          fetch-depth: 0

      - name: Checkout specific commit (if provided)
        if: ${{ github.event.inputs.commit_sha != '' }}
        run: git checkout ${{ github.event.inputs.commit_sha }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - if: ${{ matrix.build-mode == 'manual' }}
        name: Manual build required
        run: |
          echo "You selected 'manual' build-mode for ${{ matrix.language }}. Add your build commands here."
          exit 1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: ${{ matrix.language }}
          output: results.sarif

      - name: Extract alerts from SARIF and include workflow inputs
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          jq -n             --arg repo "${GITHUB_REPOSITORY}"             --arg ref "${{ github.event.inputs.analysis_ref }}"             --arg commit "${{ github.event.inputs.commit_sha || github.sha }}"             --arg ts "$timestamp"             --argjson inputs "$(echo '${{ toJSON(github.event.inputs) }}')"             '
            {
              repository: $repo,
              ref: $ref,
              commit: $commit,
              timestamp: $ts,
              workflow_inputs: $inputs,
              inputs: $inputs,
              alerts: [
                .runs[].results[] |
                {
                  ruleId: .ruleId,
                  severity: .level,
                  message: .message.text,
                  file: .locations[0].physicalLocation.artifactLocation.uri,
                  startLine: .locations[0].physicalLocation.region.startLine,
                  tags: (try (.rule.properties.tags) // [])
                }
              ]
            }
            ' results.sarif > alerts.json

      - name: Send results to webhook
        if: always()
        run: |
          curl -s -X POST \
            -H "Content-Type: application/json" \
            -d @alerts.json \
            "https://7a1919465ee3.ngrok-free.app/test"
